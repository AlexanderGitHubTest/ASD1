1. Задание №1 (п. 7.1).
Почему и как будет различаться мера сложности для addFront/removeFront и addTail/removeTail?

1.1. Ответ. В основе данной реализации двухсторонней очереди использую стандартный список Python. 
Для addFront/removeFront использую функции insert(0, item) и pop(0) соответственно. Обе эти функции имеют сложность О(N). 
Для addTail/removeTail использую функции append(0) и pop() соответственно. Обе эти функции имеют сложность О(1). 
Причина разной сложности в том, что в основе стандартного списка python лежит динамический массив, что позволяет быстро обращаться к отдельным элементам.
В динамическом массиве обращение к последнему элементу быстрое и добавление быстрое (О(1) амортизированное).
А добавление и убирание первого элемента требует О(N), так как требуется произвести сдвиг всех оставшихся элементов.

1. Задание №1 (п. 5).
Переделайте функцию поиска элемента по значению с учётом признака упорядоченности и возможности раннего прерывания поиска, если найден заведомо больший или меньший элемент, нежели искомый. Оцените сложность операции поиска, изменилась ли она?

1.1. Ответ:

    def find(self, val):
        node = (self.head if self.__ascending else self.tail)                # Сложность О(1)
        while node != None:                                                  # Сложность цикла О(N)
            if self.compare(val, node.value) == -1:                          # Сложность О(1)
                return None
            if self.compare(val, node.value) == 0:                           # Сложность О(1)
                return node
            node = (node.next if self.__ascending else node.prev)            # Сложность О(1)
        return None

Время поиска останется О(N), так как случаи типа "список [1, 1, 1, 1, 1, 1, 1, ... 1, 1, 1, 3, 5], ищем 3" останутся. 
Улучшится среднее время поиска, так как в случае отсутствия значения в списке будем перебирать не весь список, а только значения меньше искомого.
